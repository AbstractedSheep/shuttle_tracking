<% content_for :js_ready do %>
    var point = {latitude: <%= MAP_CENTER[:lat] %>, longitude: <%= MAP_CENTER[:long] %>};
    map = setup_map(point, 15);
    update();
    routes_and_stops();
<% end %>
<% content_for :js do %>
  var map; //The map!
  var shuttles = new Object();
  var current_data_path = '<%= current_vehicles_path(:format => 'js') %>';
  var netlink_data_path = '<%= displays_netlink_path(:format => 'js') %>';
  var base_icon = '<%= rotate_icon_path(:id => ':id', :heading => ':heading', :format => 'png') %>';

  function routes_and_stops(){
    $.getJSON(netlink_data_path, function(data){
      $.each(data.stops, function(i, stop){
        stop['description'] = stop_description(stop); 
        var stop_marker = add_point_to_map(stop, map);
      });
      $.each(data.routes, function(i, route){
        var polyline = new google.maps.Polyline({
          strokeColor: route.color,
          strokeWeight: route.width
        });
        $.each(route.coords, function(index, coord){
          position = add_point_to_polyline(coord, polyline);
        });
        polyline.setMap(map);
      });
    });
    return true;
  }

  function update(){
    $.getJSON(current_data_path, function(data){
      var now = new Date();
      // Pass through every update and move / create the appropriate marker
      $.each(data, function(i, obj){
        var vehicle = obj.vehicle;

        // Remap some of the attributes so they aren't so deep.
        vehicle['latitude'] = vehicle.latest_position.latitude;
        vehicle['longitude'] = vehicle.latest_position.longitude;

        // Figure out what goes in the infobubble
        vehicle['description'] = shuttle_description(vehicle);

        if(vehicle.id in shuttles){
          // The shuttle is already on the map, all we have to do is update it.
          var marker = shuttles[vehicle.id];
          marker.setPosition(new google.maps.LatLng(vehicle.latitude, vehicle.longitude));
        } else {
          // The shuttle is NOT on the map.  Create it and store the marker.
          var marker = add_point_to_map(vehicle, map);
        }

        //If the vehicle has been assigned an icon, use it!
        if('icon' in vehicle){
          // Build the URL for an icon, replacing :id with the icon ID
          // and :heading with the vehicle heading
          var icon_url = base_icon.replace(':id',vehicle.icon.id).replace(':heading',vehicle.latest_position.heading);
          marker.setIcon(icon_url);
        }

        marker.updated_at = now;
        shuttles[vehicle.id] = marker;
      });
      // Pass through every shuttle and delete it if it was not updated.
      $.each(shuttles, function(id, marker){
        if(marker.updated_at < now){
          marker.setMap(null);
          delete shuttles[id];
        }
      });
    });
    return true;
  }
  function shuttle_description(vehicle){
    var buffer = new Array();
    buffer.push("<strong>");
    buffer.push(vehicle.name);
    buffer.push("</strong><br />Traveling ");
    buffer.push(vehicle.latest_position.cardinal_point);
    buffer.push(" at ");
    buffer.push(vehicle.latest_position.speed);
    buffer.push("mph.");
    return buffer.join('');
  }
  function stop_description(stop){
    var buffer = new Array();
    buffer.push("<strong>");
    buffer.push(stop.name);
    buffer.push("</strong>");
    return buffer.join('');
  }

<% end %>
<div id="shuttle_logo"></div>
<div id="mapblock">
  <div id="map_canvas"></div>
</div>
<div id="map_header">
      <span id="status">Loading...</span>
      <span id="loading_icon" style="display: none;"><%= image_tag 'full_map/4-1.gif' %></span>
</div>
<div id="left"></div>
<div id="top"></div>
<div id="right"></div>
<div id="bottom"></div>
<div id="byline">
<div id="b1">Produced and Updated by the <a href="http://webtech.union.rpi.edu/">Web Technologies Group</a> from 2006 to 2010.</div>
<div id="b1_s">Produced and Updated by the Web Technologies Group from 2006 to 2010.</div>
</div>
